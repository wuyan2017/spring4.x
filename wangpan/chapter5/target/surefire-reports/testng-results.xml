<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="31" passed="29">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="2685" started-at="2017-11-24T05:17:18Z" finished-at="2017-11-24T05:17:21Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="2685" started-at="2017-11-24T05:17:18Z" finished-at="2017-11-24T05:17:21Z">
      <class name="com.smart.injectfun.InjectFunTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.injectfun.InjectFunTest@3cef309d]" name="setUp" is-config="true" duration-ms="410" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.injectfun.InjectFunTest@3cef309d]" name="setUp" is-config="true" duration-ms="396" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReplace()[pri:0, instance:com.smart.injectfun.InjectFunTest@3cef309d]" name="testReplace" duration-ms="1" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReplace -->
        <test-method status="PASS" signature="testLookup()[pri:0, instance:com.smart.injectfun.InjectFunTest@3cef309d]" name="testLookup" duration-ms="1" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLookup -->
      </class> <!-- com.smart.injectfun.InjectFunTest -->
      <class name="com.smart.dynamic.DynamicBeanTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.dynamic.DynamicBeanTest@6ebc05a6]" name="setUp" is-config="true" duration-ms="297" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="registerBean()[pri:0, instance:com.smart.dynamic.DynamicBeanTest@6ebc05a6]" name="registerBean" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerBean -->
      </class> <!-- com.smart.dynamic.DynamicBeanTest -->
      <class name="com.smart.anno.AnnoAutowireTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.anno.AnnoAutowireTest@578486a3]" name="setUp" is-config="true" duration-ms="1230" started-at="2017-11-24T13:17:18Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAutoByName()[pri:0, instance:com.smart.anno.AnnoAutowireTest@578486a3]" name="testAutoByName" duration-ms="1" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoByName -->
      </class> <!-- com.smart.anno.AnnoAutowireTest -->
      <class name="com.smart.dynamic.CustomSchemaTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.dynamic.CustomSchemaTest@1dfe2924]" name="setUp" is-config="true" duration-ms="603" started-at="2017-11-24T13:17:18Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="registerBean()[pri:0, instance:com.smart.dynamic.CustomSchemaTest@1dfe2924]" name="registerBean" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerBean -->
      </class> <!-- com.smart.dynamic.CustomSchemaTest -->
      <class name="com.smart.groovy.LogonServiceTest">
        <test-method status="PASS" signature="getBean()[pri:0, instance:com.smart.groovy.LogonServiceTest@3701eaf6]" name="getBean" duration-ms="1913" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBean -->
      </class> <!-- com.smart.groovy.LogonServiceTest -->
      <class name="com.smart.fb.FactoryBeanTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="1" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1036" started-at="2017-11-24T13:17:19Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testCarFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="4" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testPropPathFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="3" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testCollFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="2" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testFieldFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testCarFactoryBean()[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="testCarFactoryBean" duration-ms="1" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCarFactoryBean -->
        <test-method status="PASS" signature="testFieldFactoryBean()[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="testFieldFactoryBean" duration-ms="5" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFieldFactoryBean -->
        <test-method status="PASS" signature="testCollFactoryBean()[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="testCollFactoryBean" duration-ms="2" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCollFactoryBean -->
        <test-method status="PASS" signature="testPropPathFactoryBean()[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="testPropPathFactoryBean" duration-ms="5" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPropPathFactoryBean -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testCollFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testCarFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testFieldFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.fb.FactoryBeanTest.testPropPathFactoryBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.smart.fb.FactoryBeanTest@3d99d22e]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.smart.fb.FactoryBeanTest -->
      <class name="com.smart.ditype.DiTypeTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="setUp" is-config="true" duration-ms="75" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBoss()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="testBoss" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBoss -->
        <test-method status="PASS" signature="testCar3()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="testCar3" duration-ms="1" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCar3 -->
        <test-method status="PASS" signature="testCar1()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="testCar1" duration-ms="7" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCar1 -->
        <test-method status="PASS" signature="testCar4()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="testCar4" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCar4 -->
        <test-method status="PASS" signature="testCar5()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="testCar5" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCar5 -->
        <test-method status="PASS" signature="testCar()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="testCar" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCar -->
        <test-method status="PASS" signature="testCar6()[pri:0, instance:com.smart.ditype.DiTypeTest@35d176f7]" name="testCar6" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCar6 -->
      </class> <!-- com.smart.ditype.DiTypeTest -->
      <class name="com.smart.scope.ScopeTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="672" started-at="2017-11-24T13:17:19Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.scope.ScopeTest.testInject()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.scope.ScopeTest.testInject()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testInject()[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="testInject" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInject -->
        <test-method status="PASS" signature="testGetBean()[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="testGetBean" duration-ms="3" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetBean -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.scope.ScopeTest.testGetBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.scope.ScopeTest.testGetBean()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.smart.scope.ScopeTest@6e6c3152]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.smart.scope.ScopeTest -->
      <class name="com.smart.attr.BeanAttrDITest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.attr.BeanAttrDITest@2b9627bc]" name="setUp" is-config="true" duration-ms="695" started-at="2017-11-24T13:17:18Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="testBeanRetrieveBoss()[pri:0, instance:com.smart.attr.BeanAttrDITest@2b9627bc]" name="testBeanRetrieveBoss" duration-ms="2" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.smart.attr.BeanAttrDITest.testBeanRetrieveBoss(BeanAttrDITest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeanRetrieveBoss -->
        <test-method status="PASS" signature="testBeanRetrieveChildBoss()[pri:0, instance:com.smart.attr.BeanAttrDITest@2b9627bc]" name="testBeanRetrieveChildBoss" duration-ms="1" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeanRetrieveChildBoss -->
        <test-method status="PASS" signature="testCascadeAttr()[pri:0, instance:com.smart.attr.BeanAttrDITest@2b9627bc]" name="testCascadeAttr" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCascadeAttr -->
        <test-method status="PASS" signature="testBeanRetrieveCar()[pri:0, instance:com.smart.attr.BeanAttrDITest@2b9627bc]" name="testBeanRetrieveCar" duration-ms="32" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeanRetrieveCar -->
        <test-method status="FAIL" signature="testBeanRetrieveBoss3()[pri:0, instance:com.smart.attr.BeanAttrDITest@2b9627bc]" name="testBeanRetrieveBoss3" duration-ms="64" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <exception class="org.springframework.beans.factory.NoSuchBeanDefinitionException">
            <message>
              <![CDATA[No bean named 'boss3' is defined]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.springframework.beans.factory.NoSuchBeanDefinitionException: No bean named 'boss3' is defined
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBeanDefinition(DefaultListableBeanFactory.java:698)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getMergedLocalBeanDefinition(AbstractBeanFactory.java:1174)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:283)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:196)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1048)
	at com.smart.attr.BeanAttrDITest.testBeanRetrieveBoss3(BeanAttrDITest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.springframework.beans.factory.NoSuchBeanDefinitionException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeanRetrieveBoss3 -->
        <test-method status="PASS" signature="testBeanRetrieveBoss1()[pri:0, instance:com.smart.attr.BeanAttrDITest@2b9627bc]" name="testBeanRetrieveBoss1" duration-ms="53" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeanRetrieveBoss1 -->
      </class> <!-- com.smart.attr.BeanAttrDITest -->
      <class name="com.smart.attr.ParentContainerBeanTest">
        <test-method status="PASS" signature="parent()[pri:0, instance:com.smart.attr.ParentContainerBeanTest@3a883ce7]" name="parent" duration-ms="80" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parent -->
      </class> <!-- com.smart.attr.ParentContainerBeanTest -->
      <class name="com.smart.tagdepend.TagDependTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.tagdepend.TagDependTest@32709393]" name="setUp" is-config="true" duration-ms="184" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.tagdepend.TagDependTest@32709393]" name="setUp" is-config="true" duration-ms="77" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testReferenceTag()[pri:0, instance:com.smart.tagdepend.TagDependTest@32709393]" name="testReferenceTag" duration-ms="1" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReferenceTag -->
        <test-method status="PASS" signature="testInheritTag()[pri:0, instance:com.smart.tagdepend.TagDependTest@32709393]" name="testInheritTag" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInheritTag -->
      </class> <!-- com.smart.tagdepend.TagDependTest -->
      <class name="com.smart.auto.AutowireTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.auto.AutowireTest@551aa95a]" name="setUp" is-config="true" duration-ms="630" started-at="2017-11-24T13:17:18Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testAutoByName()[pri:0, instance:com.smart.auto.AutowireTest@551aa95a]" name="testAutoByName" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAutoByName -->
      </class> <!-- com.smart.auto.AutowireTest -->
      <class name="com.smart.anno.MyComponentTest">
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.smart.anno.MyComponentTest@2758fe70]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="1418" started-at="2017-11-24T13:17:19Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.smart.anno.MyComponentTest@2758fe70]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.smart.anno.MyComponentTest@2758fe70]" name="springTestContextAfterTestClass" is-config="true" duration-ms="1" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
        <test-method status="PASS" signature="load()[pri:0, instance:com.smart.anno.MyComponentTest@2758fe70]" name="load" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- load -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.anno.MyComponentTest@2758fe70]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.anno.MyComponentTest.load()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.smart.anno.MyComponentTest@2758fe70]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-11-24T13:17:20Z" finished-at="2017-11-24T13:17:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.smart.anno.MyComponentTest.load()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
      </class> <!-- com.smart.anno.MyComponentTest -->
      <class name="com.smart.simple.BeanRetrieveTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.smart.simple.BeanRetrieveTest@cd2dae5]" name="setUp" is-config="true" duration-ms="593" started-at="2017-11-24T13:17:18Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testBeanRetrieve()[pri:0, instance:com.smart.simple.BeanRetrieveTest@cd2dae5]" name="testBeanRetrieve" duration-ms="2" started-at="2017-11-24T13:17:19Z" finished-at="2017-11-24T13:17:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBeanRetrieve -->
      </class> <!-- com.smart.simple.BeanRetrieveTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
